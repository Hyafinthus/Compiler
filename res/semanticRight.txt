int m,z=0x12;   /*连续声明，赋值，8进制、16进制*/
char c= 'a';	/*字符型声明，识别字符常数*/	
float b = 1;     /*浮点型声明，自动类型转化*/
int[2][4][6] hh;    /*多维数组的声明*/
int[3] aa;       /*数组声明*/
aa[0] = 2;       /*数组的赋值和引用*/
int x = 1;
int y = 2;

/*较复杂的赋值*/
b = hh[2][3][4];/*赋值时的强制类型转换*/
float d;
d = 2 + 2.5;/*表达式内部的强制类型转换*/
hh[1][2][3] = aa[1] + x;
aa[y-x] += aa[x];

while(m>2)      /*循环语句*/
do
if(m<8)  	/*嵌套的分支语句*/
then m = m +1;  
else m = m*2;
switch(m){	/*switch语句的识别和应用*/
  case 1:
  m = m +1;
  case 2:
  m = m + 3;
  default:
  m = m +6;
}
int i;
for(i = 0;i<10;i++){  /*for语句*/
  m = m+2;
}

/*记录的声明，这里声明了一个栈结构*/
record stack{    
  int num;
  char value;
}

/*函数调用，声明一个返回值为int的求和函数*/
proc int getSum2(int x,int y){
   int j2 = x;
   int k2 = y;
   return j2+k2;
}
aa[1]=call getSum2(m,z);    /*有返回值的函数调用*/

int a0,b0,c0,d0,e0,f0,m0;
if(a0<b0 || c0<d0 && (e0<f0 || true) && false)/*更复杂的布尔表达式*/
then m0=m0+1;
else m0=m0*2;